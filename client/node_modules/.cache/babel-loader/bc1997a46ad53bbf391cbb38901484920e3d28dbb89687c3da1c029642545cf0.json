{"ast":null,"code":"import decode from 'jwt-decode';\nclass AuthService {\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n  loggedIn() {\n    // Get token\n    const token = this.getToken();\n    // Return true if token exists and is not expired\n    return token && !this.isTokenExpired(token);\n  }\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        localStorage.removeItem('id_token');\n        return true;\n      }\n      return false;\n    } catch (err) {\n      return true;\n    }\n  }\n  login(idToken) {\n    // Save token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n  logout() {\n    // Clear token from localStorage\n    localStorage.removeItem('id_token');\n    // Reload page\n    window.location.assign('/');\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["decode","AuthService","getToken","localStorage","getItem","loggedIn","token","isTokenExpired","decoded","exp","Date","now","removeItem","err","login","idToken","setItem","window","location","assign","logout"],"sources":["C:/Users/shefr/OneDrive/Documents/SEMESTER 7/COMP 455/newSearch/client/src/utils/auth.js"],"sourcesContent":["import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  loggedIn() {\r\n    // Get token\r\n    const token = this.getToken();\r\n    // Return true if token exists and is not expired\r\n    return token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        localStorage.removeItem('id_token');\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (err) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  login(idToken) {\r\n    // Save token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear token from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // Reload page\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,YAAY;AAE/B,MAAMC,WAAW,CAAC;EAChBC,QAAQA,CAAA,EAAG;IACT,OAAOC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACzC;EAEAC,QAAQA,CAAA,EAAG;IACT;IACA,MAAMC,KAAK,GAAG,IAAI,CAACJ,QAAQ,CAAC,CAAC;IAC7B;IACA,OAAOI,KAAK,IAAI,CAAC,IAAI,CAACC,cAAc,CAACD,KAAK,CAAC;EAC7C;EAEAC,cAAcA,CAACD,KAAK,EAAE;IACpB,IAAI;MACF,MAAME,OAAO,GAAGR,MAAM,CAACM,KAAK,CAAC;MAC7B,IAAIE,OAAO,CAACC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE;QACnCR,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;QACnC,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAO,IAAI;IACb;EACF;EAEAC,KAAKA,CAACC,OAAO,EAAE;IACb;IACAZ,YAAY,CAACa,OAAO,CAAC,UAAU,EAAED,OAAO,CAAC;IACzCE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;EAC7B;EAEAC,MAAMA,CAAA,EAAG;IACP;IACAjB,YAAY,CAACS,UAAU,CAAC,UAAU,CAAC;IACnC;IACAK,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;EAC7B;AACF;AAEA,eAAe,IAAIlB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}