{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shefr\\\\OneDrive\\\\Documents\\\\SEMESTER 7\\\\COMP 455\\\\newSearch\\\\client\\\\src\\\\pages\\\\SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\n\n// import { getMe, deleteBook } from '../utils/API';\n// import Auth from '../utils/auth';\n// import { removeBookId } from '../utils/localStorage';\n\n// import { REMOVE_BOOK } from '../utils/mutations';\n// import { GET_ME } from '../utils/queries';\n// import { useMutation, useQuery } from '@apollo/client';\n\n// TODO: use GET_ME query instead of `getMe()`\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  const [userData] = useState({});\n  // const [removeBook] = useMutation(REMOVE_BOOK);\n  // const { loading, data } = useQuery(GET_ME); // Execute GET_ME query on load\n  // const userData = data?.me || {}; // Save query data to userData variable\n\n  // TODO: use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n\n  // TODO: create function that accepts the book's mongo _id value as param and deletes the book from the database\n  // const handleDeleteBook = async (bookId) => {\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //   if (!token) {\n  //     return false;\n  //   }\n\n  //   try {\n  //     // const response = await deleteBook(bookId, token);\n  //     const response = await removeBook({\n  //       variables: { bookId }\n  //     });\n\n  //     if (!response.ok) {\n  //       throw new Error('something went wrong!');\n  //     }\n\n  //     const updatedUser = await response.json();\n  //     setUserData(updatedUser);\n  //     // upon success, remove book's id from localStorage\n  //     removeBookId(bookId);\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n\n  //   // try {\n  //   //   // ***** Use the removeBook mutation instead of deleteBook function *****\n  //   //   const response = await removeBook({\n  //   //     variables: { bookId }\n  //   //   });\n\n  //   //   if (!response.ok) {\n  //   //     throw new Error('something went wrong!');\n  //   //   }\n\n  //   //   const updatedUser = await response.json();\n  //   //   setUserData(updatedUser);\n  //   //   removeBookId(bookId);\n  //   // } catch (err) {\n  //   //   console.error(err);\n  //   // }\n  // };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      fluid: true,\n      className: \"text-light bg-dark p-5\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"pt-5\",\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: \"4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              border: \"dark\",\n              children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: book.image,\n                alt: `The cover for ${book.title}`,\n                variant: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"small\",\n                  children: [\"Authors: \", book.authors]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: book.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, book.bookId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, book.bookId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"UTEId8zpYFYoTnRjbtg1RfUVM6g=\");\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","Container","Card","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","SavedBooks","_s","userData","userDataLength","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","savedBooks","map","book","md","border","image","Img","src","alt","title","variant","Body","Title","authors","Text","description","bookId","_c","$RefreshReg$"],"sources":["C:/Users/shefr/OneDrive/Documents/SEMESTER 7/COMP 455/newSearch/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  Card,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap';\r\n\r\n// import { getMe, deleteBook } from '../utils/API';\r\n// import Auth from '../utils/auth';\r\n// import { removeBookId } from '../utils/localStorage';\r\n\r\n// import { REMOVE_BOOK } from '../utils/mutations';\r\n// import { GET_ME } from '../utils/queries';\r\n// import { useMutation, useQuery } from '@apollo/client';\r\n\r\n// TODO: use GET_ME query instead of `getMe()`\r\n\r\nconst SavedBooks = () => {\r\n  const [userData] = useState({});\r\n  // const [removeBook] = useMutation(REMOVE_BOOK);\r\n  // const { loading, data } = useQuery(GET_ME); // Execute GET_ME query on load\r\n  // const userData = data?.me || {}; // Save query data to userData variable\r\n\r\n  // TODO: use this to determine if `useEffect()` hook needs to run again\r\n  const userDataLength = Object.keys(userData).length;\r\n\r\n  \r\n  \r\n  // useEffect(() => {\r\n  //   const getUserData = async () => {\r\n  //     try {\r\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n  //       if (!token) {\r\n  //         return false;\r\n  //       }\r\n\r\n  //       const response = await getMe(token);\r\n\r\n  //       if (!response.ok) {\r\n  //         throw new Error('something went wrong!');\r\n  //       }\r\n\r\n  //       const user = await response.json();\r\n  //       setUserData(user);\r\n  //     } catch (err) {\r\n  //       console.error(err);\r\n  //     }\r\n  //   };\r\n\r\n  //   getUserData();\r\n  // }, [userDataLength]);\r\n\r\n\r\n\r\n  // TODO: create function that accepts the book's mongo _id value as param and deletes the book from the database\r\n  // const handleDeleteBook = async (bookId) => {\r\n  //   const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n  //   if (!token) {\r\n  //     return false;\r\n  //   }\r\n\r\n  //   try {\r\n  //     // const response = await deleteBook(bookId, token);\r\n  //     const response = await removeBook({\r\n  //       variables: { bookId }\r\n  //     });\r\n\r\n  //     if (!response.ok) {\r\n  //       throw new Error('something went wrong!');\r\n  //     }\r\n\r\n  //     const updatedUser = await response.json();\r\n  //     setUserData(updatedUser);\r\n  //     // upon success, remove book's id from localStorage\r\n  //     removeBookId(bookId);\r\n  //   } catch (err) {\r\n  //     console.error(err);\r\n  //   }\r\n\r\n  //   // try {\r\n  //   //   // ***** Use the removeBook mutation instead of deleteBook function *****\r\n  //   //   const response = await removeBook({\r\n  //   //     variables: { bookId }\r\n  //   //   });\r\n\r\n  //   //   if (!response.ok) {\r\n  //   //     throw new Error('something went wrong!');\r\n  //   //   }\r\n\r\n  //   //   const updatedUser = await response.json();\r\n  //   //   setUserData(updatedUser);\r\n  //   //   removeBookId(bookId);\r\n  //   // } catch (err) {\r\n  //   //   console.error(err);\r\n  //   // }\r\n  // };\r\n\r\n  // if data isn't here yet, say so\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div fluid className=\"text-light bg-dark p-5\">\r\n        <Container>\r\n          <h1>Viewing saved books!</h1>\r\n        </Container>\r\n      </div>\r\n      <Container>\r\n        <h2 className='pt-5'>\r\n          {userData.savedBooks.length\r\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\r\n            : 'You have no saved books!'}\r\n        </h2>\r\n        <Row>\r\n          {userData.savedBooks.map((book) => {\r\n            return (\r\n              <Col key={book.bookId} md=\"4\">\r\n                <Card key={book.bookId} border='dark'>\r\n                  {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\r\n                  <Card.Body>\r\n                    <Card.Title>{book.title}</Card.Title>\r\n                    <p className='small'>Authors: {book.authors}</p>\r\n                    <Card.Text>{book.description}</Card.Text>\r\n                    {/* <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\r\n                      Delete this Book!\r\n                    </Button> */}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBooks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}