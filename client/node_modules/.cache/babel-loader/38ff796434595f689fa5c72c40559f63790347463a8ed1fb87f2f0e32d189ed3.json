{"ast":null,"code":"import decode from 'jwt-decode';\nimport { setContext } from '@apollo/client/link/context';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink, from } from '@apollo/client';\n\n// Create http link\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:3001/graphql'\n});\n\n// Create auth link\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nclass AuthService {\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n  loggedIn() {\n    // Get token\n    const token = this.getToken();\n    // Return true if token exists and is not expired\n    return token && !this.isTokenExpired(token);\n  }\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        localStorage.removeItem('id_token');\n        return true;\n      }\n      return false;\n    } catch (err) {\n      return true;\n    }\n  }\n  login(idToken) {\n    // Save token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n  logout() {\n    // Clear token from localStorage\n    localStorage.removeItem('id_token');\n    // Reload page\n    window.location.assign('/');\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["decode","setContext","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","from","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","AuthService","getToken","loggedIn","isTokenExpired","decoded","exp","Date","now","removeItem","err","login","idToken","setItem","window","location","assign","logout"],"sources":["C:/Users/shefr/OneDrive/Documents/SEMESTER 7/COMP 455/newSearch/client/src/utils/auth.js"],"sourcesContent":["import decode from 'jwt-decode';\r\n\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink, from } from '@apollo/client';\r\n\r\n\r\n// Create http link\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:3001/graphql'\r\n});\r\n\r\n// Create auth link\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : ''\r\n    }\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nclass AuthService {\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  loggedIn() {\r\n    // Get token\r\n    const token = this.getToken();\r\n    // Return true if token exists and is not expired\r\n    return token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        localStorage.removeItem('id_token');\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (err) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  login(idToken) {\r\n    // Save token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear token from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // Reload page\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,YAAY;AAE/B,SAASC,UAAU,QAAQ,6BAA6B;AAExD,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAEC,cAAc,EAAEC,IAAI,QAAQ,gBAAgB;;AAGlG;AACA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;EAC9BG,GAAG,EAAE;AACP,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAGR,UAAU,CAAC,CAACS,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAId,YAAY,CAAC;EAC9Be,IAAI,EAAER,QAAQ,CAACS,MAAM,CAACX,QAAQ,CAAC;EAC/BY,KAAK,EAAE,IAAIhB,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAMiB,WAAW,CAAC;EAChBC,QAAQA,CAAA,EAAG;IACT,OAAOR,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACzC;EAEAQ,QAAQA,CAAA,EAAG;IACT;IACA,MAAMV,KAAK,GAAG,IAAI,CAACS,QAAQ,CAAC,CAAC;IAC7B;IACA,OAAOT,KAAK,IAAI,CAAC,IAAI,CAACW,cAAc,CAACX,KAAK,CAAC;EAC7C;EAEAW,cAAcA,CAACX,KAAK,EAAE;IACpB,IAAI;MACF,MAAMY,OAAO,GAAGxB,MAAM,CAACY,KAAK,CAAC;MAC7B,IAAIY,OAAO,CAACC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,EAAE;QACnCd,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;QACnC,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZ,OAAO,IAAI;IACb;EACF;EAEAC,KAAKA,CAACC,OAAO,EAAE;IACb;IACAlB,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAED,OAAO,CAAC;IACzCE,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;EAC7B;EAEAC,MAAMA,CAAA,EAAG;IACP;IACAvB,YAAY,CAACe,UAAU,CAAC,UAAU,CAAC;IACnC;IACAK,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,GAAG,CAAC;EAC7B;AACF;AAEA,eAAe,IAAIf,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}